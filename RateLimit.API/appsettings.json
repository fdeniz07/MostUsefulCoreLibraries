{
  //CLIENT-RATE AYARLARI

  "ClientRateLimiting": {
    "QuotaExceededResponse": {
      "Content": "{{ \"mesaj\":\"Istek limiti asildi. \",\"Detay \": \"Izin verilen istek sayisi {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz. \"  }}",
      "ContentType": "application/json"
    },

    "EnableEndpointRateLimiting": true, //Sinirlamalari belirtmek icin aktiflestiriyoruz
    "StackBlockedRequests": false, //Tanimlayacagimiz dakikadaki istek sinirimizin üzerinde olan basarisiz istekler sayilsin(true) mi sayilmasin mi?
    "HttpStatusCode": 429, //Too many request hatasi döndürür
    "ClientIdHeader": "X-ClientId", 
    "ClientWhitelist": ["client-1"], //Sinirlama koymak istemedigimiz client isimleri buraya yazilir.
    "EndpointWhitelist": [ "put:/api/products" ],

    "GeneralRules": [
      {
        //"Endpoint": "*", //Tüm end pointleri temsil eder
        //"Endpoint": "GET/api/products", //Get istegine göre islem yapar
        "Endpoint": "*:/api/products",
        "Period": "20s", //s:saniye, m:dakika, h:saat, d:gün
        "Limit": 3 // periyot araligindaki istek sayisi
      },
      {
        "Endpoint": "*:/api/products/*", //sondaki * ifadesi istedigimiz kadar parametre olsun, yazmaktan kurtulmamizi saglar
        "Period": "30s",
        "Limit": 2
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "30s",
        "Limit": 5
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "1d",
        "Limit": 500
      }
    ]
  },


  // IP-RATE AYARLARI

  //////Policies üzerine yazilan kurallar, genel kurallari ezer. Ancak ezilecek yerdeki kural Policy'e göre daha dar kapsamli ise, dar kapsamdaki kural gecerli olacaktir.
  //////Örnek olarak: Period kismi düsük olan dar kapsam iken, Limitte büyük olan dar kapsamdir.

  ////"IpRateLimitPolicies": {
  ////  "IpRules": [
  ////    {
  ////      "Ip": "::1", //IPV6
  ////      "Rules": [
  ////        {
  ////          "Endpoint": "*",
  ////          "Period": "40s",
  ////          "Limit": 30
  ////        }
  ////      ]
  ////    }
  ////  ]
  ////},


  //"IpRateLimiting": {
  //  "QuotaExceededResponse": {
  //    "Content": "{{ \"mesaj\":\"Istek limiti asildi. \",\"Detay \": \"Izin verilen istek sayisi {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz. \"  }}",
  //    "ContentType": "application/json"
  //  },


  //  "EnableEndpointRateLimiting": true, //Sinirlamalari belirtmek icin aktiflestiriyoruz
  //  "RealIpHeader": "x-ip", //Eger birden fazla instance kullaniliyorsa (mesala Docker de) ve önde LoadBalancer varsa, LoadBalancer ayarlarina bizim header'a verecegimiz key gecilmelidir.  
  //  "StackBlockedRequests": false, //Tanimlayacagimiz dakikadaki istek sinirimizin üzerinde olan basarisiz istekler sayilsin(true) mi sayilmasin mi?
  //  "HttpStatusCode": 429, //Too many request hatasi döndürür
  //  "IpWhitelist": [ "127.0.0.1" ], //Sinirlama koymak istemedigimiz IP adresleri buraya yazilir. Localhost IPV4 ve IPV6 beraber yazilmalidir. 
  //  //Ya da IP blogu olarak da verilebilir [ "127.0.0.1", "::1/10", "192.168.0.0/24" ]
  //  "EndpointWhitelist": [ "put:/api/products" ],


  //  "GeneralRules": [
  //    {
  //      //"Endpoint": "*", //Tüm end pointleri temsil eder
  //      //"Endpoint": "GET:/api/products", //Get istegine göre islem yapar
  //      "Endpoint": "*:/api/products",
  //      "Period": "20s", //s:saniye, m:dakika, h:saat, d:gün
  //      "Limit": 3 // periyot araligindaki istek sayisi
  //    },
  //    //{
  //    //  "Endpoint": "*:/api/products",
  //    //  "Period": "1h",
  //    //  "Limit": 100
  //    //},
  //    {
  //      "Endpoint": "*:/api/products/*", //sondaki * ifadesi istedigimiz kadar parametre olsun, yazmaktan kurtulmamizi saglar
  //      "Period": "30s",
  //      "Limit": 2
  //    },
  //    {
  //      "Endpoint": "*:/api/categories",
  //      "Period": "30s",
  //      "Limit": 5
  //    },
  //    {
  //      "Endpoint": "*:/api/categories",
  //      "Period": "1d",
  //      "Limit": 500
  //    }
  //  ]
  //},




  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}
